//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SOA.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Car", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Car : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Car_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Car_NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Car_TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DriverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Car_Name {
            get {
                return this.Car_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Car_NameField, value) != true)) {
                    this.Car_NameField = value;
                    this.RaisePropertyChanged("Car_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Car_Number {
            get {
                return this.Car_NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.Car_NumberField, value) != true)) {
                    this.Car_NumberField = value;
                    this.RaisePropertyChanged("Car_Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Car_Type {
            get {
                return this.Car_TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.Car_TypeField, value) != true)) {
                    this.Car_TypeField = value;
                    this.RaisePropertyChanged("Car_Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Driver {
            get {
                return this.DriverField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverField, value) != true)) {
                    this.DriverField = value;
                    this.RaisePropertyChanged("Driver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetData", ReplyAction="http://tempuri.org/IService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetData", ReplyAction="http://tempuri.org/IService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService/GetDataUsingDataContractResponse")]
        SOA.ServiceReference1.CompositeType GetDataUsingDataContract(SOA.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<SOA.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(SOA.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertCar", ReplyAction="http://tempuri.org/IService/InsertCarResponse")]
        int InsertCar(SOA.ServiceReference1.Car c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertCar", ReplyAction="http://tempuri.org/IService/InsertCarResponse")]
        System.Threading.Tasks.Task<int> InsertCarAsync(SOA.ServiceReference1.Car c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateCar", ReplyAction="http://tempuri.org/IService/UpdateCarResponse")]
        int UpdateCar(SOA.ServiceReference1.Car c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateCar", ReplyAction="http://tempuri.org/IService/UpdateCarResponse")]
        System.Threading.Tasks.Task<int> UpdateCarAsync(SOA.ServiceReference1.Car c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteCar", ReplyAction="http://tempuri.org/IService/DeleteCarResponse")]
        int DeleteCar(SOA.ServiceReference1.Car c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteCar", ReplyAction="http://tempuri.org/IService/DeleteCarResponse")]
        System.Threading.Tasks.Task<int> DeleteCarAsync(SOA.ServiceReference1.Car c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCar", ReplyAction="http://tempuri.org/IService/GetCarResponse")]
        SOA.ServiceReference1.Car GetCar(SOA.ServiceReference1.Car c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCar", ReplyAction="http://tempuri.org/IService/GetCarResponse")]
        System.Threading.Tasks.Task<SOA.ServiceReference1.Car> GetCarAsync(SOA.ServiceReference1.Car c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllCars", ReplyAction="http://tempuri.org/IService/GetAllCarsResponse")]
        SOA.ServiceReference1.Car[] GetAllCars();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllCars", ReplyAction="http://tempuri.org/IService/GetAllCarsResponse")]
        System.Threading.Tasks.Task<SOA.ServiceReference1.Car[]> GetAllCarsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : SOA.ServiceReference1.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<SOA.ServiceReference1.IService>, SOA.ServiceReference1.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public SOA.ServiceReference1.CompositeType GetDataUsingDataContract(SOA.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<SOA.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(SOA.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public int InsertCar(SOA.ServiceReference1.Car c) {
            return base.Channel.InsertCar(c);
        }
        
        public System.Threading.Tasks.Task<int> InsertCarAsync(SOA.ServiceReference1.Car c) {
            return base.Channel.InsertCarAsync(c);
        }
        
        public int UpdateCar(SOA.ServiceReference1.Car c) {
            return base.Channel.UpdateCar(c);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCarAsync(SOA.ServiceReference1.Car c) {
            return base.Channel.UpdateCarAsync(c);
        }
        
        public int DeleteCar(SOA.ServiceReference1.Car c) {
            return base.Channel.DeleteCar(c);
        }
        
        public System.Threading.Tasks.Task<int> DeleteCarAsync(SOA.ServiceReference1.Car c) {
            return base.Channel.DeleteCarAsync(c);
        }
        
        public SOA.ServiceReference1.Car GetCar(SOA.ServiceReference1.Car c) {
            return base.Channel.GetCar(c);
        }
        
        public System.Threading.Tasks.Task<SOA.ServiceReference1.Car> GetCarAsync(SOA.ServiceReference1.Car c) {
            return base.Channel.GetCarAsync(c);
        }
        
        public SOA.ServiceReference1.Car[] GetAllCars() {
            return base.Channel.GetAllCars();
        }
        
        public System.Threading.Tasks.Task<SOA.ServiceReference1.Car[]> GetAllCarsAsync() {
            return base.Channel.GetAllCarsAsync();
        }
    }
}
